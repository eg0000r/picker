{"version":3,"sources":["categories.js","credentials.js","branches.js","highlights.js","Control.js","App.js","serviceWorker.js","index.js","trash.svg"],"names":["categories","BAR","PARTY_BAR","ROOFTOP_BAR","WINEBAR","COCKTAIL_BAR","LOUNGE","BEACHCLUB","RESTAURANT","CLUB","EVENT","KTV","SIAM_DIU","Object","freeze","credentials","user","pass","branches","VENUE","PROMOTION","highlights","OUTDOOR_SEATING","ROOFTOP_DINING","LIVE_MUSIC","SPORTS","KARAOKE","BAR_GAMES","md5","require","finalResult","Post","props","updateFinalResult","data","filename","result","getBranches","i","arr","keys","length","hasOwnProperty","values","branch","push","onChange","e","target","value","key","name","type","defaultChecked","toString","getHighlights","checked","getCategories","state","image","deleted","this","setState","style","display","padding","margin","backgroundColor","borderRadius","textAlign","hidden","width","border","src","disabled","defaultValue","city","date","area","fee","range","music","location","time","menu","description","resize","onClick","newBool","cursor","trash","React","Component","ControlPanel","authenticate","postResult","xhr","XMLHttpRequest","addEventListener","response","responseText","open","fin","console","log","send","JSON","stringify","getChildren","children","posts","toLowerCase","parse","flexFlow","justifyContent","alignItems","InitialInput","checkStatus","active","getServerStatus","className","textChanged","input","scrape","getImproves","improvesContent","loadImproves","improves","placeholder","height","readOnly","fn","selectPost","select","uid","caption","removePost","remove","getButton","alt","PostAnalyzer","callback","obj","category","highlight","slot","setBranch","setCategory","loadCategories","setHighlight","loadHighlights","loadBranches","color","Posts","getResult","processed","processCallback","k","v","processPosts","selected","loadPosts","out","n","media","url","text","done","contentEditable","flexWrap","marginLeft","marginRight","marginTop","marginBottom","Content","isLoaded","showingControl","Control","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.b629a9e5.chunk.js","sourcesContent":["const categories = {\r\n    BAR: 0,\r\n    PARTY_BAR: 5,\r\n    ROOFTOP_BAR: 6,\r\n    WINEBAR: 7,\r\n    COCKTAIL_BAR: 8,\r\n    LOUNGE: 9,\r\n    BEACHCLUB: 10,\r\n    RESTAURANT: 11,\r\n    CLUB: 1,\r\n    EVENT: 2,\r\n    KTV: 3,\r\n    SIAM_DIU: 4\r\n};\r\n\r\nObject.freeze(categories);\r\n\r\nexport default categories;","const credentials = [\r\n    {\r\n        user: 'petrudenko',\r\n        pass: '1799e36b72910b01b723f4cab95c06e2'//MD5\r\n    },\r\n    {\r\n        user: 'eg0000r',\r\n        pass: '12a21290a40e12717f46c993ba1aa55b'//MD5\r\n    }\r\n];\r\n\r\nObject.freeze(credentials);\r\n\r\nexport default credentials;\r\n","const branches = {\r\n    VENUE: 1,\r\n    EVENT: 2,\r\n    PROMOTION: 3\r\n};\r\n\r\nObject.freeze(branches);\r\n\r\nexport default branches;","const highlights = {\r\n    OUTDOOR_SEATING: 0,\r\n    ROOFTOP_DINING: 1,\r\n    LIVE_MUSIC: 2,\r\n    SPORTS: 3,\r\n    KARAOKE: 4,\r\n    BAR_GAMES: 5\r\n};\r\n\r\nObject.freeze(highlights);\r\n\r\nexport default highlights;","import React from 'react';\r\nimport trash from './trash.svg'\r\nimport credentials from \"./credentials\";\r\nimport branches from \"./branches\";\r\nimport categories from \"./categories\";\r\nimport highlights from \"./highlights\";\r\n\r\nconst md5 = require('md5');\r\n\r\nlet finalResult = {};\r\n\r\nclass Post extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: this.props.data.image,\r\n            deleted: false,\r\n            branches: [],\r\n            categories: [],\r\n            highlights: []\r\n        };\r\n        this.result = this.props.data;\r\n        this.result.deleted = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({branches: this.getBranches()});\r\n        this.setState({categories: this.getCategories()});\r\n        this.setState({highlights: this.getHighlights()});\r\n    }\r\n\r\n    updateFinalResult = () => {\r\n        finalResult[this.props.data.filename] = this.result;\r\n    };\r\n\r\n    // Legacy\r\n    getBranches = () => {\r\n        let arr = [];\r\n        let i;\r\n        for (i = 0; i < Object.keys(branches).length; i ++) {\r\n            if (this.props.data.hasOwnProperty('branch')) {\r\n                if (Object.values(this.props.data.branch)[0] === branches[Object.keys(branches)[i]]) {\r\n                    arr.push(<label onChange={(e) => {this.result.branch = {}; this.result.branch[e.target.value] = branches[e.target.value]; this.updateFinalResult()}} key={i}><input name={'branch' + this.props.data.filename} type={'radio'} value={Object.keys(branches)[i]} defaultChecked={true}/>{Object.keys(branches)[i].toString()}</label>)\r\n                } else {\r\n                    arr.push(<label onChange={(e) => {this.result.branch = {}; this.result.branch[e.target.value] = branches[e.target.value]; this.updateFinalResult()}} key={i}><input name={'branch' + this.props.data.filename} type={'radio'} value={Object.keys(branches)[i]}/>{Object.keys(branches)[i].toString()}</label>)\r\n                }\r\n            } else {\r\n                arr.push(<label onChange={(e) => {this.result.branch = {}; this.result.branch[e.target.value] = branches[e.target.value]; this.updateFinalResult()}} key={i}><input name={'branch' + this.props.data.filename} type={'radio'} value={Object.keys(branches)[i]}/>{Object.keys(branches)[i].toString()}</label>)\r\n            }\r\n        }\r\n        return arr;\r\n    };\r\n\r\n    // Legacy\r\n    getHighlights = () => {\r\n        let arr = [];\r\n        let i;\r\n        if (!this.props.data.hasOwnProperty('highlights')) {\r\n            this.result.highlights = {};\r\n        }\r\n        for (i = 0; i < Object.keys(highlights).length; i ++) {\r\n            if (this.props.data.hasOwnProperty('highlights')) {\r\n                if (this.props.data.highlights.hasOwnProperty(Object.keys(highlights)[i].toString())) {\r\n                    arr.push(<label key={i}><input onChange={(e) => {if (e.target.checked) {this.result.highlights[e.target.value] = highlights[e.target.value]} else {delete this.result.highlights[e.target.value]} this.updateFinalResult()}} type={'checkbox'} value={Object.keys(highlights)[i]} defaultChecked={true}/>{Object.keys(highlights)[i].toString()}</label>)\r\n                } else {\r\n                    arr.push(<label key={i}><input  onChange={(e) => {if (e.target.checked) {this.result.highlights[e.target.value] = highlights[e.target.value]} else {delete this.result.highlights[e.target.value]} this.updateFinalResult()}} type={'checkbox'} value={Object.keys(highlights)[i]}/>{Object.keys(highlights)[i].toString()}</label>);\r\n                }\r\n            } else {\r\n                arr.push(<label key={i}><input  onChange={(e) => {if (e.target.checked) {this.result.highlights[e.target.value] = highlights[e.target.value]} else {delete this.result.highlights[e.target.value]} this.updateFinalResult()}} type={'checkbox'} value={Object.keys(highlights)[i]}/>{Object.keys(highlights)[i].toString()}</label>);\r\n            }\r\n            if (i % 2 === 0) {\r\n                arr.push(<br key={i.toString() + i.toString()}/>)\r\n            }\r\n        }\r\n        return arr;\r\n    };\r\n\r\n    getCategories = () => {\r\n        let arr = [];\r\n        let i;\r\n        for (i = 0; i < Object.keys(categories).length; i ++) {\r\n            if (this.props.data.categories.hasOwnProperty(Object.keys(categories)[i].toString())) {\r\n                arr.push(<label key={i}><input onChange={(e) => {if (e.target.checked) {this.result.categories[e.target.value] = categories[e.target.value]} else {delete this.result.categories[e.target.value]} this.updateFinalResult()}} type={'checkbox'} value={Object.keys(categories)[i]} defaultChecked={true}/>{Object.keys(categories)[i].toString()}</label>)\r\n            } else {\r\n                arr.push(<label key={i}><input  onChange={(e) => {if (e.target.checked) {this.result.categories[e.target.value] = categories[e.target.value]} else {delete this.result.categories[e.target.value]} this.updateFinalResult()}} type={'checkbox'} value={Object.keys(categories)[i]}/>{Object.keys(categories)[i].toString()}</label>);\r\n            }\r\n            if (i % 2 === 0) {\r\n                arr.push(<br key={i.toString()+ i.toString()}/>)\r\n            }\r\n        }\r\n        return arr;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{\r\n                display: 'block',\r\n                padding: '20pt',\r\n                margin: '5pt',\r\n                backgroundColor: 'whitesmoke',\r\n                borderRadius: '10pt',\r\n                textAlign: 'center'\r\n            }}>\r\n                <h4 hidden={!this.state.deleted}>WILL BE DELETED</h4>\r\n                <img style={{width: '20vw', border: 'thin black solid'}} src={this.state.image}/>\r\n                <br/>\r\n                Image:<br/>\r\n                <input disabled={this.state.deleted} defaultValue={this.props.data.image} onChange={(e) => {\r\n                    this.setState({image: e.target.value});\r\n                    this.result.image = e.target.value;\r\n                    this.updateFinalResult();\r\n                }} style={{width: '20vw'}}/><br/>\r\n                Name:<br/>\r\n                <input onChange={(e) => {this.result.name = e.target.value; this.updateFinalResult()}} disabled={this.state.deleted} defaultValue={this.props.data.name} style={{width: '20vw'}}/><br/>\r\n                City:<br/>\r\n                <input onChange={(e) => {this.result.city = e.target.value; this.updateFinalResult()}} disabled={this.state.deleted} defaultValue={this.props.data.city} style={{width: '20vw'}}/><br/>\r\n                Date:<br/>\r\n                <input onChange={(e) => {this.result.date = e.target.value; this.updateFinalResult()}} disabled={this.state.deleted} defaultValue={this.props.data.date} style={{width: '20vw'}}/><br/>\r\n                Area:<br/>\r\n                <input onChange={(e) => {this.result.area = e.target.value; this.updateFinalResult()}} disabled={this.state.deleted} defaultValue={this.props.data.area} style={{width: '20vw'}}/><br/>\r\n                Fee:<br/>\r\n                <input onChange={(e) => {this.result.fee = e.target.value; this.updateFinalResult()}} disabled={this.state.deleted} defaultValue={this.props.data.fee} style={{width: '20vw'}}/><br/>\r\n                Range:<br/>\r\n                <input onChange={(e) => {this.result.range = e.target.value; this.updateFinalResult()}} disabled={this.state.deleted} defaultValue={this.props.data.range} style={{width: '20vw'}}/><br/>\r\n                Music:<br/>\r\n                <input onChange={(e) => {this.result.music = e.target.value; this.updateFinalResult()}} disabled={this.state.deleted} defaultValue={this.props.data.music} style={{width: '20vw'}}/><br/>\r\n                Location:<br/>\r\n                <input onChange={(e) => {this.result.location = e.target.value; this.updateFinalResult()}} disabled={this.state.deleted} defaultValue={this.props.data.location}\r\n                       style={{width: '20vw'}}/><br/>\r\n                Time:<br/>\r\n                <input onChange={(e) => {this.result.time = e.target.value; this.updateFinalResult()}} disabled={this.state.deleted} defaultValue={this.props.data.time} style={{width: '20vw'}}/><br/>\r\n                User:<br/>\r\n                <input onChange={(e) => {this.result.user = e.target.value; this.updateFinalResult()}} disabled={this.state.deleted} defaultValue={this.props.data.user} style={{width: '20vw'}}/><br/>\r\n                Menu:<br/>\r\n                <input onChange={(e) => {this.result.menu = e.target.value; this.updateFinalResult()}} disabled={this.state.deleted} defaultValue={this.props.data.menu} style={{width: '20vw'}}/><br/>\r\n                Description:<br/>\r\n                <textarea onChange={(e) => {this.result.description = e.target.value; this.updateFinalResult();}} disabled={this.state.deleted} defaultValue={this.props.data.description}\r\n                          style={{width: '20vw', resize: 'none'}}/><br/>\r\n                          Branch:<br/>\r\n                <div>{this.state.branches}</div>\r\n                Categories:<br/>\r\n                <div style={{border: 'black thin dotted'}}>{this.state.categories}</div>\r\n                Highlights:<br/>\r\n                <div style={{border: 'black thin dotted'}}>{this.state.highlights}</div>\r\n                <img onClick={() => {\r\n                    const newBool = !this.state.deleted;\r\n                    this.setState({deleted: newBool});\r\n                    this.result.deleted = newBool;\r\n                    this.updateFinalResult();\r\n                }} style={{width: '5vw', cursor: 'pointer'}} src={trash}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ControlPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n            user: '',\r\n            pass: '',\r\n            response: '',\r\n            city: 'All'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.addEventListener('load', () => {\r\n            console.log(JSON.parse(xhr.responseText));\r\n            this.setState({posts: JSON.parse(xhr.responseText)});\r\n        });\r\n        xhr.open('GET', 'https://cors-anywhere.herokuapp.com/http://157.230.242.35:7000/get');\r\n        xhr.send();\r\n    }\r\n\r\n    authenticate = () => {\r\n        let i;\r\n        for (i = 0; i < credentials.length; i++) {\r\n            if (credentials[i].user === this.state.user && credentials[i].pass === md5(this.state.pass)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    postResult = () => {\r\n        if (this.authenticate()) {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.addEventListener('load', () => {\r\n                this.setState({response: xhr.responseText});\r\n            });\r\n            xhr.open('POST', 'https://cors-anywhere.herokuapp.com/http://157.230.242.35:7000/post');\r\n            const fin = Object.values(finalResult);\r\n            console.log(fin);\r\n            xhr.send(JSON.stringify(fin));\r\n        } else {\r\n            this.setState({response: 'INVALID CREDENTIALS'})\r\n        }\r\n    };\r\n    getChildren = () => {\r\n        let children = [];\r\n        let i;\r\n        for (i = 0; i < this.state.posts.length; i++) {\r\n            if (this.state.city.toLowerCase() === 'all' || this.state.posts[i].city.toLowerCase() === this.state.city.toLowerCase()) {\r\n                children.push(<Post key={this.state.posts[i].filename} data={this.state.posts[i]}/>)\r\n            }\r\n        }\r\n        return children;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{textAlign: 'center'}}>\r\n                <select onChange={(e) => {this.setState({city: e.target.value})}}>\r\n                    <option value={'All'}>All</option>\r\n                    <option value={'Singapore'}>Singapore</option>\r\n                    <option value={'Moscow'}>Moscow</option>\r\n                </select>\r\n                <div style={{display: 'flex', flexFlow: 'row wrap', justifyContent: 'center', alignItems: 'center'}}>\r\n                    {this.getChildren()}\r\n                </div>\r\n                <div style={{backgroundColor: 'white'}}>\r\n                    <label>\r\n                        Username:\r\n                        <input style={{margin: '5pt'}} onChange={(e) => {this.setState({user: e.target.value})}}/>\r\n                    </label>\r\n                    <br/>\r\n                    <label>\r\n                        Password:\r\n                        <input style={{margin: '5pt'}} type={'password'} onChange={(e) => {this.setState({pass: e.target.value})}}/>\r\n                    </label>\r\n                    <br/>\r\n                    <button style={{margin: '10pt'}} onClick={this.postResult}>POST TO TELO BOT</button>\r\n                    <br/>\r\n                    {this.state.response}\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ControlPanel;\r\n","import React from 'react';\nimport categories from \"./categories\";\nimport credentials from \"./credentials\";\nimport './App.css';\nimport ControlPanel from './Control'\nimport branches from \"./branches\";\nimport highlights from \"./highlights\";\n\nconst md5 = require('md5');\n\nclass InitialInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: '',\n            result: '',\n            active: false,\n            improves: false,\n            improvesContent: {}\n        };\n    }\n\n    componentDidMount() {\n        this.checkStatus();\n        this.getImproves();\n    }\n\n    checkStatus = () => {\n        let xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', () => {\n            if (xhr.responseText === 'ACTIVE') {\n                this.setState({active: true})\n            }\n        });\n        xhr.open('GET', 'https://cors-anywhere.herokuapp.com/http://157.230.242.35:8000/status');\n        xhr.send();\n    };\n    getServerStatus = () => {\n        if (this.state.active) {\n            return (\n                <div className={'server-active'}>\n                    Server is active\n                </div>\n            )\n        }\n        return (\n            <div className={'server-inactive'}>\n                Server is inactive\n            </div>\n        )\n    };\n    textChanged = (e) => {\n        this.setState({input: e.target.value});\n    };\n    scrape = (e) => {\n        let xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', () => {\n            this.setState({result: xhr.responseText});\n        });\n        xhr.open('POST', 'https://cors-anywhere.herokuapp.com/http://157.230.242.35:8000/scrape');\n        xhr.send(e.target.value);\n    };\n    getImproves = () => {\n        let xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', () => {\n            this.setState({improvesContent: JSON.parse(xhr.responseText)});\n        });\n        xhr.open('GET', 'https://cors-anywhere.herokuapp.com/http://157.230.242.35:7000/get-improves');\n        xhr.send();\n    };\n    loadImproves = () => {\n        let arr = [];\n        let i;\n        const keys = Object.keys(this.state.improvesContent);\n        for (i = 0; i < keys.length; i++) {\n            arr.push(\n                <div key={i} style={{\n                    width: '20vw',\n                    display: 'block',\n                    borderRadius: '5pt',\n                    border: 'thin black solid',\n                    margin: '5pt',\n                    padding: '5pt',\n                    backgroundColor: 'beige',\n                }}>\n                    {this.state.improvesContent[keys[i]]}\n                </div>\n            )\n        }\n        return arr;\n    };\n\n    render() {\n        return (\n            <div style={{textAlign: 'center'}}>\n                <h1>Instagram Post Picker by eg0000r</h1>\n                <h3>Compatible with scraper v1.0 and higher</h3>\n                <h5>UPD: 4/5/20</h5>\n                {this.getServerStatus()}\n                <textarea onChange={this.textChanged} placeholder={'!2\\neg0000r\\n!1\\npetrudenko'}\n                          style={{width: '90vw', height: '20vh', resize: 'none'}}/>\n                <br/>\n                <button onClick={this.scrape} value={this.state.input}>SCRAPE!</button>\n                <br/>\n                <textarea value={this.state.result} readOnly={true} placeholder={'Result'}\n                          style={{width: '90vw', height: '20vh', resize: 'none'}}/>\n                <br/>\n                <button onClick={this.props.fn} value={this.state.result}>LOAD</button>\n                <div style={{\n                    display: 'flex',\n                    flexFlow: 'row wrap',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    margin: '10pt'\n                }}>{this.loadImproves()}</div>\n            </div>\n        )\n    }\n}\n\nclass Post extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            select: false\n        }\n    }\n\n    selectPost = () => {\n        this.setState({select: true});\n        this.props.select(this.props.uid, {\n            image: this.props.image,\n            user: this.props.user,\n            caption: this.props.caption\n        });\n    };\n    removePost = () => {\n        this.setState({select: false});\n        this.props.remove(this.props.uid);\n    };\n    getButton = () => {\n        if (this.state.select) {\n            return (\n                <div className={'select-active'} onClick={this.removePost}>-</div>\n            )\n        }\n        return (\n            <div className={'select'} onClick={this.selectPost}>+</div>\n        )\n    };\n\n    render() {\n        return (\n            <div className={'post'}>\n                <img className={'post'} src={this.props.image} alt={''}/>\n                <p className={'post-user'}>{this.props.user}</p>\n                <p className={'post-caption'}>{this.props.caption}</p>\n                {this.getButton()}\n            </div>\n        )\n    }\n}\n\nclass PostAnalyzer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: {},\n            highlight: {},\n            name: '',\n            location: '',\n            date: '',\n            description: '',\n            music: '',\n            fee: '',\n            time: '',\n            area: '',\n            range: '$',\n            city: 'Singapore',\n            branch: {}\n        }\n    }\n\n    callback = () => {\n        const obj = {\n            user: this.props.data.user,\n            image: this.props.data.image,\n            name: this.state.name,\n            location: this.state.location,\n            date: this.state.date,\n            music: this.state.music,\n            fee: this.state.fee,\n            time: this.state.time,\n            description: this.state.description,\n            area: this.state.area,\n            range: this.state.range,\n            city: this.state.city,\n            categories: this.state.category,\n            highlights: this.state.highlight,\n            menu: '',\n            branch: this.state.branch\n        };\n        this.props.slot(this.props.uid, obj)\n    };\n    setBranch = (e) => {\n        if (e.target.checked) {\n            let obj = {};\n            obj[e.target.value] = branches[e.target.value];\n            this.setState({branch: obj});\n        }\n        this.callback();\n    };\n    setCategory = (e) => {\n        if (e.target.checked) {\n            let obj = this.state.category;\n            obj[e.target.value] = categories[e.target.value];\n            this.setState({category: obj});\n        } else {\n            let obj = this.state.category;\n            delete obj[e.target.value];\n            this.setState({category: obj});\n        }\n        this.callback();\n    };\n    loadCategories = () => {\n        const keys = Object.keys(categories);\n        let arr = [];\n        let i;\n        for (i = 0; i < keys.length; i++) {\n            arr.push(\n                <label key={keys[i]}>\n                    <input onChange={this.setCategory} value={keys[i]} type={'checkbox'}/>\n                    {keys[i]}\n                </label>\n            )\n        }\n        return arr;\n    };\n    setHighlight = (e) => {\n        if (e.target.checked) {\n            let obj = this.state.highlight;\n            obj[e.target.value] = highlights[e.target.value];\n            this.setState({highlight: obj});\n        } else {\n            let obj = this.state.highlight;\n            delete obj[e.target.value];\n            this.setState({highlight: obj});\n        }\n        this.callback();\n    };\n    loadHighlights = () => {\n        const keys = Object.keys(highlights);\n        let arr = [];\n        let i;\n        for (i = 0; i < keys.length; i++) {\n            arr.push(\n                <label key={keys[i]}>\n                    <input onChange={this.setHighlight} value={keys[i]} type={'checkbox'}/>\n                    {keys[i]}\n                </label>\n            )\n        }\n        return arr;\n    };\n    loadBranches = () => {\n        const keys = Object.keys(branches);\n        let arr = [];\n        let i;\n        for (i = 0; i < keys.length; i++) {\n            arr.push(\n                <label key={keys[i]}>\n                    <input onChange={this.setBranch} value={keys[i]} type={'radio'} name={'branch'}/>\n                    {keys[i]}\n                </label>\n            )\n        }\n        return arr;\n    };\n\n    render() {\n        return (\n            <div className={'analyzer'}>\n                <img className={'analyzer'} src={this.props.data.image} alt={''}/>\n                <p><b>User:</b> {this.props.data.user}</p>\n                <p><b>Caption:</b> {this.props.data.caption}</p>\n                <p style={{color: 'red'}}>PLEASE, FORMAT DATE AND TIME LIKE SHOWN IN THE PLACEHOLDERS</p>\n                <label style={{padding: '5pt'}}>\n                    <b>Event name: </b>\n                    <input onChange={(e) => {\n                        this.setState({name: e.target.value});\n                        this.callback()\n                    }} placeholder={'TELO party'}/>\n                </label>\n                <label style={{padding: '5pt'}}>\n                    <b>Location: </b>\n                    <input onChange={(e) => {\n                        this.setState({location: e.target.value});\n                        this.callback()\n                    }} placeholder={'123 Rockaway Blvd.'}/>\n                </label>\n                <label style={{padding: '5pt'}}>\n                    <b>Date: </b>\n                    <input onChange={(e) => {\n                        this.setState({date: e.target.value});\n                        this.callback()\n                    }} placeholder={'dd.mm.yyyy'}/>\n                </label>\n                <br/>\n                <label style={{padding: '5pt'}}>\n                    <b>Music: </b>\n                    <input onChange={(e) => {\n                        this.setState({music: e.target.value});\n                        this.callback()\n                    }} placeholder={'Rock'}/>\n                </label>\n                <label style={{padding: '5pt'}}>\n                    <b>Entry fee: </b>\n                    <input onChange={(e) => {\n                        this.setState({fee: e.target.value});\n                        this.callback()\n                    }} placeholder={'12'}/>\n                </label>\n                <label style={{padding: '5pt'}}>\n                    <b>Time: </b>\n                    <input onChange={(e) => {\n                        this.setState({time: e.target.value});\n                        this.callback()\n                    }} placeholder={'23:00'}/>\n                </label>\n                <br/>\n                <label style={{padding: '5pt'}}>\n                    <b>Area: </b>\n                    <input onChange={(e) => {\n                        this.setState({area: e.target.value});\n                        this.callback()\n                    }} placeholder={'Novogireevo'}/>\n                </label>\n                <label style={{padding: '5pt'}}>\n                    <b>Price range: </b>\n                    <select onChange={(e) => {\n                        this.setState({range: e.target.value});\n                        this.callback()\n                    }}>\n                        <option value={'$'}>$</option>\n                        <option value={'$$'}>$$</option>\n                        <option value={'$$$'}>$$$</option>\n                        <option value={'$$$$'}>$$$$</option>\n                    </select>\n                </label>\n                <label style={{padding: '5pt'}}>\n                    <b>City: </b>\n                    <select onChange={(e) => {\n                        this.setState({city: e.target.value});\n                        this.callback()\n                    }}>\n                        <option value={'Singapore'}>Singapore</option>\n                        <option value={'Moscow'}>Moscow</option>\n                        <option value={'London'}>London</option>\n                        <option value={'Copenhagen'}>Copenhagen</option>\n                    </select>\n                </label>\n                <br/>\n                <label style={{padding: '5pt'}}>\n                    <b>Description:</b>\n                    <br/>\n                    <textarea onChange={(e) => {\n                        this.setState({description: e.target.value});\n                        this.callback()\n                    }} placeholder={'DJ Ewko. Unlimited bar. 18 to enter, 21 to drink. Girls free entry.'}\n                              style={{width: '80vw', resize: 'none'}}/>\n                </label>\n                <br/>\n                <div>\n                    <b>Branch: </b>\n                    {this.loadBranches()}\n                </div>\n                <br/>\n                <div>\n                    <b>Categories: </b>\n                    {this.loadCategories()}\n                </div>\n                <div>\n                    <b>Highlights: </b>\n                    {this.loadHighlights()}\n                </div>\n                <br/>\n                <button onClick={this.callback}>Apply Changes</button>\n            </div>\n        )\n    }\n}\n\nclass Posts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            response: '',\n            user: '',\n            pass: '',\n            result: false,\n            done: false,\n            selected: {},\n            processed: {}\n        }\n    }\n\n    authenticate = () => {\n        let i;\n        for (i = 0; i < credentials.length; i++) {\n            if (credentials[i].user === this.state.user && credentials[i].pass === md5(this.state.pass)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    postResult = () => {\n        if (this.authenticate()) {\n            let xhr = new XMLHttpRequest();\n            xhr.addEventListener('load', () => {\n                this.setState({response: xhr.responseText});\n            });\n            xhr.open('POST', 'https://cors-anywhere.herokuapp.com/http://157.230.242.35:8000/save');\n            xhr.send(this.getResult());\n        } else {\n            this.setState({response: 'INVALID CREDENTIALS'})\n        }\n    };\n    getResult = () => {\n        let arr = [];\n        let keys = Object.keys(this.state.processed);\n        let i;\n        for (i = 0; i < keys.length; i++) {\n            arr.push(this.state.processed[keys[i]]);\n        }\n        return JSON.stringify(arr);\n    };\n    processCallback = (k, v) => {\n        let obj = this.state.processed;\n        obj[k] = v;\n        this.setState({processed: obj});\n    };\n    processPosts = () => {\n        const keys = Object.keys(this.state.selected);\n        let arr = [];\n        let i;\n        for (i = 0; i < keys.length; i++) {\n            arr.push(<PostAnalyzer key={keys[i]} uid={keys[i]} slot={this.processCallback}\n                                   data={this.state.selected[keys[i]]}/>)\n        }\n        return arr;\n    };\n    selectPost = (k, v) => {\n        let obj = this.state.selected;\n        obj[k] = v;\n        this.setState({selected: obj});\n    };\n    removePost = (k) => {\n        let obj = this.state.selected;\n        delete obj[k];\n        this.setState({selected: obj});\n    };\n    loadPosts = () => {\n        let out = [];\n        let i;\n        for (i = 0; i < this.props.data.length; i++) {\n            const user = this.props.data[i][0].user;\n            let n;\n            for (n = 1; n < this.props.data[i].length; n++) {\n                const image = this.props.data[i][n].media[0].url;\n                const caption = this.props.data[i][n].text;\n                out.push(<Post key={i.toString() + n.toString()} uid={i.toString() + n.toString()}\n                               select={this.selectPost} remove={this.removePost} image={image} user={user}\n                               caption={caption}/>)\n            }\n        }\n        return out;\n    };\n\n    render() {\n        if (!this.state.done) {\n            return (\n                <div style={{textAlign: 'center'}}>\n                    <div style={{display: 'flex', flexWrap: 'wrap'}}>\n                        {this.loadPosts()}\n                    </div>\n                    <button onClick={() => {\n                        this.setState({done: true})\n                    }} style={{\n                        marginLeft: 'auto',\n                        marginRight: 'auto',\n                        marginTop: '15pt',\n                        marginBottom: '15pt'\n                    }}>CONTINUE\n                    </button>\n                </div>\n            )\n        } else if (!this.state.result) {\n            return (\n                <div style={{textAlign: 'center'}}>\n                    {this.processPosts()}\n                    <button onClick={() => {\n                        this.setState({result: true})\n                    }} style={{margin: '15pt'}}>GET JSON\n                    </button>\n                </div>\n            )\n        }\n        return (\n            <div style={{textAlign: 'center'}}>\n                <textarea defaultValue={this.getResult()} contentEditable={false}\n                          style={{resize: 'none', width: '90vw', height: '90vh'}}/>\n                <br/>\n                <div>\n                    <label>\n                        Username:\n                        <input style={{margin: '5pt'}} onChange={(e) => {\n                            this.setState({user: e.target.value})\n                        }}/>\n                    </label>\n                    <br/>\n                    <label>\n                        Password:\n                        <input style={{margin: '5pt'}} type={'password'} onChange={(e) => {\n                            this.setState({pass: e.target.value})\n                        }}/>\n                    </label>\n                    <br/>\n                    <button style={{margin: '10pt'}} onClick={this.postResult}>POST TO TELO BOT</button>\n                    <br/>\n                    {this.state.response}\n                    <br/>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nclass Content extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            posts: {},\n            showingControl: false,\n        }\n    }\n\n    loadPosts = (e) => {\n        this.setState({isLoaded: true, posts: JSON.parse(e.target.value)});\n    };\n\n    render() {\n        if (!this.state.isLoaded) {\n            if (!this.state.showingControl) {\n                return (\n                    <div style={{textAlign: 'center'}}>\n                        <button onClick={() => {\n                            this.setState({showingControl: true})\n                        }}>GO TO CONTROL PANEL\n                        </button>\n                        <InitialInput fn={this.loadPosts}/>\n                    </div>\n                )\n            } else {\n                return (\n                    <div style={{textAlign: 'center'}}>\n                        <button onClick={() => {\n                            this.setState({showingControl: false})\n                        }}>GO TO PICKER\n                        </button>\n                        <ControlPanel/>\n                    </div>\n                )\n            }\n        }\n        return (\n            <Posts data={this.state.posts}/>\n        )\n    }\n}\n\nfunction App() {\n    return (\n        <div>\n            <Content/>\n        </div>\n    );\n}\n\n/*\nconst final = [\n  {\n    user: 'eg0000r',\n    image: 'https://www.example.com/image.png',\n    name: 'TELO party',\n    location: '',\n    date: '',\n    description: '',\n    categories: {\n      DEFAULT: 0,\n      ONE: 1\n    }\n  },\n  {\n    user: 'eg0000r',\n    image: 'https://www.example.com/image.png',\n    name: 'TELO party',\n    location: '',\n    date: '',\n    description: '',\n    categories: {\n      DEFAULT: 0,\n      ONE: 1\n    }\n  }\n];\n*/\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/trash.5a226e36.svg\";"],"sourceRoot":""}