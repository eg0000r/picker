{"version":3,"sources":["categories.js","App.js","serviceWorker.js","index.js"],"names":["categories","BAR","CLUB","EVENT","KTV","SIAM_DIU","Object","freeze","InitialInput","props","textChanged","e","setState","input","target","value","state","style","textAlign","onChange","this","placeholder","width","height","resize","onClick","fn","React","Component","Post","selectPost","select","uid","image","user","caption","removePost","remove","getButton","className","src","alt","PostAnalyzer","callback","obj","data","name","location","date","music","fee","time","description","category","slot","setCategory","checked","loadCategories","i","keys","arr","length","push","key","type","padding","Posts","getResult","processed","JSON","stringify","processCallback","k","v","processPosts","selected","loadPosts","out","n","media","url","text","toString","result","done","defaultValue","contentEditable","margin","display","flexWrap","marginLeft","marginRight","marginTop","marginBottom","Content","isLoaded","posts","parse","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0NAAMA,EAAa,CACfC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,SAAU,GAGdC,OAAOC,OAAOP,GAECA,QCNTQ,G,wDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,YAAc,SAACC,GACb,EAAKC,SAAS,CAACC,MAAOF,EAAEG,OAAOC,SAL/B,EAAKC,MAAQ,CACXH,MAAO,IAHQ,E,qDAUjB,OACI,yBAAKI,MAAO,CAACC,UAAW,WACtB,gEACA,uEACA,4CACA,8BAAUC,SAAUC,KAAKV,YAAaW,YAAa,+BAAgCJ,MAAO,CAACK,MAAO,OAAQC,OAAQ,OAAQC,OAAQ,UAClI,6BACA,4BAAQC,QAASL,KAAKX,MAAMiB,GAAIX,MAAOK,KAAKJ,MAAMH,OAAlD,a,GAlBiBc,IAAMC,YAwB3BC,E,kDACJ,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IAKRqB,WAAa,WACX,EAAKlB,SAAS,CAACmB,QAAQ,IACvB,EAAKtB,MAAMsB,OAAO,EAAKtB,MAAMuB,IAAK,CAACC,MAAO,EAAKxB,MAAMwB,MAAOC,KAAM,EAAKzB,MAAMyB,KAAMC,QAAS,EAAK1B,MAAM0B,WARtF,EAUnBC,WAAa,WACX,EAAKxB,SAAS,CAACmB,QAAQ,IACvB,EAAKtB,MAAM4B,OAAO,EAAK5B,MAAMuB,MAZZ,EAcnBM,UAAY,WACV,OAAI,EAAKtB,MAAMe,OAET,yBAAKQ,UAAW,gBAAiBd,QAAS,EAAKW,YAA/C,KAIF,yBAAKG,UAAW,SAAUd,QAAS,EAAKK,YAAxC,MAnBJ,EAAKd,MAAQ,CACXe,QAAQ,GAHO,E,qDAyBjB,OACI,yBAAKQ,UAAW,QACd,yBAAKA,UAAW,OAAQC,IAAKpB,KAAKX,MAAMwB,MAAOQ,IAAK,KACpD,uBAAGF,UAAW,aAAcnB,KAAKX,MAAMyB,MACvC,uBAAGK,UAAW,gBAAiBnB,KAAKX,MAAM0B,SACzCf,KAAKkB,iB,GA/BGX,IAAMC,WAqCnBc,E,kDACJ,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IAYRkC,SAAW,WACT,IAAMC,EAAM,CACVV,KAAM,EAAKzB,MAAMoC,KAAKX,KACtBD,MAAO,EAAKxB,MAAMoC,KAAKZ,MACvBa,KAAM,EAAK9B,MAAM8B,KACjBC,SAAU,EAAK/B,MAAM+B,SACrBC,KAAM,EAAKhC,MAAMgC,KACjBC,MAAO,EAAKjC,MAAMiC,MAClBC,IAAK,EAAKlC,MAAMkC,IAChBC,KAAM,EAAKnC,MAAMmC,KACjBC,YAAa,EAAKpC,MAAMoC,YACxBpD,WAAY,EAAKgB,MAAMqC,UAEzB,EAAK5C,MAAM6C,KAAK,EAAK7C,MAAMuB,IAAKY,IA1Bf,EA4BnBW,YAAc,SAAC5C,GACb,GAAIA,EAAEG,OAAO0C,QAAS,CACpB,IAAIZ,EAAM,EAAK5B,MAAMqC,SACrBT,EAAIjC,EAAEG,OAAOC,OAASf,EAAWW,EAAEG,OAAOC,OAC1C,EAAKH,SAAS,CAACyC,SAAUT,QACpB,CACL,IAAIA,EAAM,EAAK5B,MAAMqC,gBACdT,EAAIjC,EAAEG,OAAOC,OACpB,EAAKH,SAAS,CAACyC,SAAUT,IAE3B,EAAKD,YAtCY,EAwCnBc,eAAiB,WACf,IAEIC,EAFEC,EAAOrD,OAAOqD,KAAK3D,GACrB4D,EAAK,GAET,IAAKF,EAAI,EAAGA,EAAIC,EAAKE,OAAQH,IAC3BE,EAAIE,KACA,2BAAOC,IAAKJ,EAAKD,IACf,2BAAOvC,SAAU,EAAKoC,YAAaxC,MAAO4C,EAAKD,GAAIM,KAAM,aACxDL,EAAKD,KAId,OAAOE,GAlDP,EAAK5C,MAAQ,CACXqC,SAAU,GACVP,KAAM,GACNC,SAAU,GACVC,KAAM,GACNI,YAAa,GACbH,MAAO,GACPC,IAAK,GACLC,KAAM,IAVS,E,qDAsDT,IAAD,OACP,OACI,yBAAKZ,UAAW,YACd,yBAAKA,UAAW,WAAYC,IAAKpB,KAAKX,MAAMoC,KAAKZ,MAAOQ,IAAK,KAC7D,2BAAG,oCAAH,IAAiBrB,KAAKX,MAAMoC,KAAKX,MACjC,2BAAG,uCAAH,IAAoBd,KAAKX,MAAMoC,KAAKV,SACpC,2BAAOlB,MAAO,CAACgD,QAAS,QACtB,2CACA,2BAAO9C,SAAU,SAACR,GAAO,EAAKC,SAAS,CAACkC,KAAMnC,EAAEG,OAAOC,QAAS,EAAK4B,YAAatB,YAAa,gBAEjG,2BAAOJ,MAAO,CAACgD,QAAS,QACtB,yCACA,2BAAO9C,SAAU,SAACR,GAAO,EAAKC,SAAS,CAACmC,SAAUpC,EAAEG,OAAOC,QAAS,EAAK4B,YAAatB,YAAa,wBAErG,2BAAOJ,MAAO,CAACgD,QAAS,QACtB,qCACA,2BAAO9C,SAAU,SAACR,GAAO,EAAKC,SAAS,CAACoC,KAAMrC,EAAEG,OAAOC,QAAS,EAAK4B,YAAatB,YAAa,gBAEjG,6BACA,2BAAOJ,MAAO,CAACgD,QAAS,QACtB,sCACA,2BAAO9C,SAAU,SAACR,GAAO,EAAKC,SAAS,CAACqC,MAAOtC,EAAEG,OAAOC,QAAS,EAAK4B,YAAatB,YAAa,UAElG,2BAAOJ,MAAO,CAACgD,QAAS,QACtB,0CACA,2BAAO9C,SAAU,SAACR,GAAO,EAAKC,SAAS,CAACsC,IAAKvC,EAAEG,OAAOC,QAAS,EAAK4B,YAAatB,YAAa,QAEhG,2BAAOJ,MAAO,CAACgD,QAAS,QACtB,qCACA,2BAAO9C,SAAU,SAACR,GAAO,EAAKC,SAAS,CAACuC,KAAMxC,EAAEG,OAAOC,QAAS,EAAK4B,YAAatB,YAAa,WAEjG,6BACA,2BAAOJ,MAAO,CAACgD,QAAS,QACtB,2CACA,6BACA,8BAAU9C,SAAU,SAACR,GAAO,EAAKC,SAAS,CAACwC,YAAazC,EAAEG,OAAOC,QAAS,EAAK4B,YAAatB,YAAa,sEAAuEJ,MAAO,CAACK,MAAO,OAAQE,OAAQ,WAEjN,6BACA,6BACE,2CACCJ,KAAKqC,uB,GA/FS9B,IAAMC,WAsG3BsC,E,kDACJ,WAAYzD,GAAQ,IAAD,8BACjB,cAAMA,IAQR0D,UAAY,WACV,IAEIT,EAFAE,EAAM,GACND,EAAOrD,OAAOqD,KAAK,EAAK3C,MAAMoD,WAElC,IAAKV,EAAI,EAAGA,EAAIC,EAAKE,OAAQH,IAC3BE,EAAIE,KAAK,EAAK9C,MAAMoD,UAAUT,EAAKD,KAErC,OAAOW,KAAKC,UAAUV,IAhBL,EAkBnBW,gBAAkB,SAACC,EAAGC,GACpB,IAAI7B,EAAM,EAAK5B,MAAMoD,UACrBxB,EAAI4B,GAAKC,EACT,EAAK7D,SAAS,CAACwD,UAAWxB,KArBT,EAuBnB8B,aAAe,WACb,IAEIhB,EAFEC,EAAOrD,OAAOqD,KAAK,EAAK3C,MAAM2D,UAChCf,EAAM,GAEV,IAAKF,EAAI,EAAGA,EAAIC,EAAKE,OAAQH,IAC3BE,EAAIE,KAAK,kBAAC,EAAD,CAAcC,IAAKJ,EAAKD,GAAI1B,IAAK2B,EAAKD,GAAIJ,KAAM,EAAKiB,gBAAiB1B,KAAM,EAAK7B,MAAM2D,SAAShB,EAAKD,OAEhH,OAAOE,GA9BU,EAgCnB9B,WAAa,SAAC0C,EAAGC,GACf,IAAI7B,EAAM,EAAK5B,MAAM2D,SACrB/B,EAAI4B,GAAKC,EACT,EAAK7D,SAAS,CAAC+D,SAAU/B,KAnCR,EAqCnBR,WAAa,SAACoC,GACZ,IAAI5B,EAAM,EAAK5B,MAAM2D,gBACd/B,EAAI4B,GACX,EAAK5D,SAAS,CAAC+D,SAAU/B,KAxCR,EA0CnBgC,UAAY,WACV,IACIlB,EADAmB,EAAM,GAEV,IAAKnB,EAAI,EAAGA,EAAI,EAAKjD,MAAMoC,KAAKgB,OAAQH,IAAM,CAC5C,IAAMxB,EAAO,EAAKzB,MAAMoC,KAAKa,GAAG,GAAGxB,KAC/B4C,OAAC,EACL,IAAKA,EAAI,EAAGA,EAAI,EAAKrE,MAAMoC,KAAKa,GAAGG,OAAQiB,IAAM,CAC/C,IAAM7C,EAAQ,EAAKxB,MAAMoC,KAAKa,GAAGoB,GAAGC,MAAM,GAAGC,IACvC7C,EAAU,EAAK1B,MAAMoC,KAAKa,GAAGoB,GAAGG,KACtCJ,EAAIf,KAAK,kBAAC,EAAD,CAAMC,IAAKL,EAAEwB,WAAaJ,EAAEI,WAAYlD,IAAK0B,EAAEwB,WAAaJ,EAAEI,WAAYnD,OAAQ,EAAKD,WAAYO,OAAQ,EAAKD,WAAYH,MAAOA,EAAOC,KAAMA,EAAMC,QAASA,MAG5K,OAAO0C,GApDP,EAAK7D,MAAQ,CACXmE,QAAQ,EACRC,MAAM,EACNT,SAAU,GACVP,UAAW,IANI,E,qDAwDT,IAAD,OACP,OAAKhD,KAAKJ,MAAMoE,KASJhE,KAAKJ,MAAMmE,OASnB,yBAAKlE,MAAO,CAACC,UAAW,WACtB,8BAAUmE,aAAcjE,KAAK+C,YAAamB,iBAAiB,EAAOrE,MAAO,CAACO,OAAQ,OAAQF,MAAO,OAAQC,OAAQ,WARjH,yBAAKN,MAAO,CAACC,UAAW,WACrBE,KAAKsD,eACN,4BAAQjD,QAAS,WAAO,EAAKb,SAAS,CAACuE,QAAQ,KAASlE,MAAO,CAACsE,OAAQ,SAAxE,aAXF,yBAAKtE,MAAO,CAACC,UAAW,WACtB,yBAAKD,MAAO,CAACuE,QAAS,OAAQC,SAAU,SACrCrE,KAAKwD,aAER,4BAAQnD,QAAS,WAAO,EAAKb,SAAS,CAACwE,MAAM,KAASnE,MAAO,CAACyE,WAAY,OAAQC,YAAa,OAAQC,UAAW,OAAQC,aAAc,SAAxI,iB,GAhEQlE,IAAMC,WAoFpBkE,E,kDACJ,WAAYrF,GAAQ,IAAD,8BACjB,cAAMA,IAMRmE,UAAY,SAACjE,GACX,EAAKC,SAAS,CAACmF,UAAU,EAAMC,MAAO3B,KAAK4B,MAAMtF,EAAEG,OAAOC,UAN1D,EAAKC,MAAQ,CACX+E,UAAU,EACVC,MAAO,IAJQ,E,qDAWjB,OAAK5E,KAAKJ,MAAM+E,SAMZ,kBAAC,EAAD,CAAOlD,KAAMzB,KAAKJ,MAAMgF,QAJtB,kBAAC,EAAD,CAActE,GAAIN,KAAKwD,gB,GAdXjD,IAAMC,WA0DbsE,MAnCf,WACE,OACE,6BACE,kBAAC,EAAD,QCzQcC,QACW,cAA7BC,OAAOrD,SAASsD,UAEe,UAA7BD,OAAOrD,SAASsD,UAEhBD,OAAOrD,SAASsD,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.ee803c3c.chunk.js","sourcesContent":["const categories = {\r\n    BAR: 0,\r\n    CLUB: 1,\r\n    EVENT: 2,\r\n    KTV: 3,\r\n    SIAM_DIU: 4\r\n};\r\n\r\nObject.freeze(categories);\r\n\r\nexport default categories;","import React from 'react';\nimport categories from \"./categories\";\nimport './App.css';\n\nclass InitialInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: ''\n    }\n  }\n  textChanged = (e) => {\n    this.setState({input: e.target.value});\n  };\n  render() {\n    return(\n        <div style={{textAlign: 'center'}}>\n          <h1>Instagram Post Picker by eg0000r</h1>\n          <h3>Compatible with scraper v1.0 and higher</h3>\n          <h5>UPD: 3/23/20</h5>\n          <textarea onChange={this.textChanged} placeholder={'Paste your scraped JSON here'} style={{width: '90vw', height: '50vh', resize: 'none'}}/>\n          <br/>\n          <button onClick={this.props.fn} value={this.state.input}>LOAD</button>\n        </div>\n    )\n  }\n}\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      select: false\n    }\n  }\n  selectPost = () => {\n    this.setState({select: true});\n    this.props.select(this.props.uid, {image: this.props.image, user: this.props.user, caption: this.props.caption});\n  };\n  removePost = () => {\n    this.setState({select: false});\n    this.props.remove(this.props.uid);\n  };\n  getButton = () => {\n    if (this.state.select) {\n      return(\n          <div className={'select-active'} onClick={this.removePost}>-</div>\n      )\n    }\n    return (\n        <div className={'select'} onClick={this.selectPost}>+</div>\n    )\n  };\n  render() {\n    return (\n        <div className={'post'}>\n          <img className={'post'} src={this.props.image} alt={''}/>\n          <p className={'post-user'}>{this.props.user}</p>\n          <p className={'post-caption'}>{this.props.caption}</p>\n          {this.getButton()}\n        </div>\n    )\n  }\n}\n\nclass PostAnalyzer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: {},\n      name: '',\n      location: '',\n      date: '',\n      description: '',\n      music: '',\n      fee: '',\n      time: ''\n    }\n  }\n  callback = () => {\n    const obj = {\n      user: this.props.data.user,\n      image: this.props.data.image,\n      name: this.state.name,\n      location: this.state.location,\n      date: this.state.date,\n      music: this.state.music,\n      fee: this.state.fee,\n      time: this.state.time,\n      description: this.state.description,\n      categories: this.state.category\n    };\n    this.props.slot(this.props.uid, obj)\n  };\n  setCategory = (e) => {\n    if (e.target.checked) {\n      let obj = this.state.category;\n      obj[e.target.value] = categories[e.target.value];\n      this.setState({category: obj});\n    } else {\n      let obj = this.state.category;\n      delete obj[e.target.value];\n      this.setState({category: obj});\n    }\n    this.callback();\n  };\n  loadCategories = () => {\n    const keys = Object.keys(categories);\n    let arr =[];\n    let i;\n    for (i = 0; i < keys.length; i ++) {\n      arr.push(\n          <label key={keys[i]}>\n            <input onChange={this.setCategory} value={keys[i]} type={'checkbox'}/>\n            {keys[i]}\n          </label>\n          )\n    }\n    return arr;\n  };\n  render() {\n    return (\n        <div className={'analyzer'}>\n          <img className={'analyzer'} src={this.props.data.image} alt={''}/>\n          <p><b>User:</b> {this.props.data.user}</p>\n          <p><b>Caption:</b> {this.props.data.caption}</p>\n          <label style={{padding: '5pt'}}>\n            <b>Event name: </b>\n            <input onChange={(e) => {this.setState({name: e.target.value}); this.callback()}} placeholder={'TELO party'}/>\n          </label>\n          <label style={{padding: '5pt'}}>\n            <b>Location: </b>\n            <input onChange={(e) => {this.setState({location: e.target.value}); this.callback()}} placeholder={'123 Rockaway Blvd.'}/>\n          </label>\n          <label style={{padding: '5pt'}}>\n            <b>Date: </b>\n            <input onChange={(e) => {this.setState({date: e.target.value}); this.callback()}} placeholder={'dd.mm.yyyy'}/>\n          </label>\n          <br/>\n          <label style={{padding: '5pt'}}>\n            <b>Music: </b>\n            <input onChange={(e) => {this.setState({music: e.target.value}); this.callback()}} placeholder={'Rock'}/>\n          </label>\n          <label style={{padding: '5pt'}}>\n            <b>Entry fee: </b>\n            <input onChange={(e) => {this.setState({fee: e.target.value}); this.callback()}} placeholder={'12'}/>\n          </label>\n          <label style={{padding: '5pt'}}>\n            <b>Time: </b>\n            <input onChange={(e) => {this.setState({time: e.target.value}); this.callback()}} placeholder={'23:00'}/>\n          </label>\n          <br/>\n          <label style={{padding: '5pt'}}>\n            <b>Description:</b>\n            <br/>\n            <textarea onChange={(e) => {this.setState({description: e.target.value}); this.callback()}} placeholder={'DJ Ewko. Unlimited bar. 18 to enter, 21 to drink. Girls free entry.'} style={{width: '80vw', resize: 'none'}}/>\n          </label>\n          <br/>\n          <div>\n            <b>Categories: </b>\n            {this.loadCategories()}\n          </div>\n        </div>\n    )\n  }\n}\n\nclass Posts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: false,\n      done: false,\n      selected: {},\n      processed: {}\n    }\n  }\n  getResult = () => {\n    let arr = [];\n    let keys = Object.keys(this.state.processed);\n    let i;\n    for (i = 0; i < keys.length; i ++) {\n      arr.push(this.state.processed[keys[i]]);\n    }\n    return JSON.stringify(arr);\n  };\n  processCallback = (k, v) => {\n    let obj = this.state.processed;\n    obj[k] = v;\n    this.setState({processed: obj});\n  };\n  processPosts = () => {\n    const keys = Object.keys(this.state.selected);\n    let arr = [];\n    let i;\n    for (i = 0; i < keys.length; i ++) {\n      arr.push(<PostAnalyzer key={keys[i]} uid={keys[i]} slot={this.processCallback} data={this.state.selected[keys[i]]}/>)\n    }\n    return arr;\n  };\n  selectPost = (k, v) => {\n    let obj = this.state.selected;\n    obj[k] = v;\n    this.setState({selected: obj});\n  };\n  removePost = (k) => {\n    let obj = this.state.selected;\n    delete obj[k];\n    this.setState({selected: obj});\n  };\n  loadPosts = () => {\n    let out = [];\n    let i;\n    for (i = 0; i < this.props.data.length; i ++) {\n      const user = this.props.data[i][0].user;\n      let n;\n      for (n = 1; n < this.props.data[i].length; n ++) {\n        const image = this.props.data[i][n].media[0].url;\n        const caption = this.props.data[i][n].text;\n        out.push(<Post key={i.toString() + n.toString()} uid={i.toString() + n.toString()} select={this.selectPost} remove={this.removePost} image={image} user={user} caption={caption}/>)\n      }\n    }\n    return out;\n  };\n  render() {\n    if (!this.state.done) {\n      return (\n          <div style={{textAlign: 'center'}}>\n            <div style={{display: 'flex', flexWrap: 'wrap'}}>\n              {this.loadPosts()}\n            </div>\n            <button onClick={() => {this.setState({done: true})}} style={{marginLeft: 'auto', marginRight: 'auto', marginTop: '15pt', marginBottom: '15pt'}}>CONTINUE</button>\n          </div>\n      )\n    } else if (!this.state.result) {\n      return (\n          <div style={{textAlign: 'center'}}>\n            {this.processPosts()}\n            <button onClick={() => {this.setState({result: true})}} style={{margin: '15pt'}}>GET JSON</button>\n          </div>\n      )\n    }\n    return (\n        <div style={{textAlign: 'center'}}>\n          <textarea defaultValue={this.getResult()} contentEditable={false} style={{resize: 'none', width: '90vw', height: '90vh'}}/>\n        </div>\n    )\n  }\n}\n\n\nclass Content extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      posts: {}\n    }\n  }\n  loadPosts = (e) => {\n    this.setState({isLoaded: true, posts: JSON.parse(e.target.value)});\n  };\n  render() {\n    if (!this.state.isLoaded) {\n      return (\n          <InitialInput fn={this.loadPosts}/>\n      )\n    }\n    return (\n        <Posts data={this.state.posts}/>\n    )\n  }\n}\n\nfunction App() {\n  return (\n    <div>\n      <Content/>\n    </div>\n  );\n}\n/*\nconst final = [\n  {\n    user: 'eg0000r',\n    image: 'https://www.example.com/image.png',\n    name: 'TELO party',\n    location: '',\n    date: '',\n    description: '',\n    categories: {\n      DEFAULT: 0,\n      ONE: 1\n    }\n  },\n  {\n    user: 'eg0000r',\n    image: 'https://www.example.com/image.png',\n    name: 'TELO party',\n    location: '',\n    date: '',\n    description: '',\n    categories: {\n      DEFAULT: 0,\n      ONE: 1\n    }\n  }\n];\n*/\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}